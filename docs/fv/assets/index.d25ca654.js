const he=function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))n(s);new MutationObserver(s=>{for(const o of s)if(o.type==="childList")for(const i of o.addedNodes)i.tagName==="LINK"&&i.rel==="modulepreload"&&n(i)}).observe(document,{childList:!0,subtree:!0});function t(s){const o={};return s.integrity&&(o.integrity=s.integrity),s.referrerpolicy&&(o.referrerPolicy=s.referrerpolicy),s.crossorigin==="use-credentials"?o.credentials="include":s.crossorigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function n(s){if(s.ep)return;s.ep=!0;const o=t(s);fetch(s.href,o)}};he();const pe=[{kind:"koch_triangle_outer",complexity:4,center:{x:.2,y:.3},scale:{w:1,h:1},rotation:{angle:30,speed:1},mutation:{size:1,angle:1},randomizer:{size:{amplify:10,seed:-90129041},angle:{amplify:-2.4,seed:1124901342}},style:{type:"line",thickness:3},color:{type:"cool",alpha:.9,speed:1}},{kind:"koch_triangle_inner",complexity:5,center:{x:.5,y:1.2},scale:{w:.4,h:.4},rotation:{angle:30,speed:-.9},mutation:{size:-1,angle:1},randomizer:{size:{amplify:0,seed:90129041},angle:{amplify:0,seed:124818419}},style:{type:"line",thickness:10},color:{type:"warm",alpha:.9,speed:.5}},{kind:"binary_tree",complexity:8,center:{x:.5,y:1.9},scale:{w:.2,h:.2},rotation:{angle:10,speed:-.2},mutation:{size:1.1,angle:.88},randomizer:{size:{amplify:.5,seed:90129041},angle:{amplify:-.1,seed:124818419}},style:{type:"triangle",thickness:10},color:{type:"rainbow",alpha:.9,speed:.5}},{kind:"tri_cis",complexity:6,center:{x:.8,y:3.3},scale:{w:1,h:1},rotation:{angle:80,speed:0},mutation:{size:1.2,angle:1.7},randomizer:{size:{amplify:0,seed:90129041},angle:{amplify:0,seed:124818419}},style:{type:"line",thickness:3},color:{type:"heat",alpha:.9,speed:.5}},{kind:"starmine",complexity:10,center:{x:.2,y:4.2},scale:{w:3,h:3},rotation:{angle:20,speed:.5},style:{type:"triangle",thickness:3},color:{type:"warm",alpha:.9,speed:.5}},{kind:"starmine",complexity:8,center:{x:.4,y:4.3},scale:{w:2.5,h:2.5},rotation:{angle:20,speed:.5},style:{type:"triangle",thickness:3},color:{type:"forest",alpha:.9,speed:.5}},{kind:"starmine",complexity:8,center:{x:.6,y:4.4},scale:{w:2,h:2},rotation:{angle:20,speed:.5},style:{type:"triangle",thickness:3},color:{type:"cool",alpha:.9,speed:.5}},{kind:"starmine",complexity:6,center:{x:.8,y:4.5},scale:{w:1.5,h:1.5},rotation:{angle:20,speed:.5},style:{type:"triangle",thickness:3},color:{type:"monochrome",alpha:.9,speed:.5}},{kind:"sunrise",complexity:100,center:{x:.4,y:5.1},scale:{w:3,h:3},rotation:{angle:-20,speed:0},style:{type:"curve",thickness:4},color:{type:"heat",alpha:.9,speed:.5}},{kind:"fold_ccurve",complexity:9,center:{x:.4,y:6},scale:{w:.4,h:.4},rotation:{angle:30,speed:0},mutation:{size:1,angle:1.5},randomizer:{size:{amplify:3,seed:90129041},angle:{amplify:-.6,seed:124818419}},style:{type:"line",thickness:5},color:{type:"pastel",alpha:.6,speed:.5}},{kind:"random",complexity:100,center:{x:.7,y:8},scale:{w:30,h:30},rotation:{angle:30,speed:0},mutation:{size:1,angle:1.5},randomizer:{size:{amplify:.1,seed:90129041},angle:{amplify:.1,seed:124818419}},style:{type:"circles",thickness:1.2},color:{type:"cool",alpha:.1,speed:10}},{kind:"random",complexity:100,center:{x:.7,y:9.5},scale:{w:30,h:30},rotation:{angle:30,speed:0},mutation:{size:1,angle:1.5},randomizer:{size:{amplify:.1,seed:90129041},angle:{amplify:.1,seed:124818419}},style:{type:"circles",thickness:1.2},color:{type:"warm",alpha:.1,speed:10}},{kind:"fold_dragon",complexity:10,center:{x:.5,y:11.2},scale:{w:.7,h:1.2},rotation:{angle:90,speed:.02},mutation:{size:.6,angle:-3.4},randomizer:{size:{amplify:.5,seed:-90129041},angle:{amplify:.1,seed:124818419}},style:{type:"curve",thickness:5},color:{type:"rainbow",alpha:.4,speed:2}}],ge={charts:pe},f=r=>r*Math.PI/180,_={LINE:"line",TRIANGLE:"triangle",CIRCLES:"circles",CURVE:"curve"},h={CIRCLE:"start",STAR:"star",CLOVER:"clover",SUNRISE:"sunrise",RANDOM:"random",STARMINE:"starmine",KOCH_CURVE:"koch_curve",KOCH_TRIANGLE_INNER:"koch_triangle_inner",KOCH_TRIANGLE_OUTER:"koch_triangle_outer",FOLD_DRAGON:"fold_dragon",FOLD_CCURVE:"fold_ccurve",TRI_CIS:"tri_cis",TRI_TRANS:"tri_trans",BINARY_TREE:"binary_tree"},O={RAINBOW:"rainbow",WARM:"warm",FOREST:"forest",COOL:"cool",HEAT:"heat",MONOCHROME:"monochrome",PASTEL:"pastel"},L=class{constructor(r){this.colorTable=[],this.gradientRainbows=[{position:0,red:255,green:0,blue:0},{position:43,red:255,green:255,blue:0},{position:85,red:0,green:255,blue:0},{position:128,red:0,green:255,blue:255},{position:171,red:0,green:0,blue:255},{position:223,red:255,green:0,blue:255},{position:255,red:255,green:0,blue:0}],this.gradientWarm=[{position:0,red:255,green:0,blue:0},{position:128,red:255,green:255,blue:0},{position:255,red:255,green:0,blue:0}],this.gradientForest=[{position:0,red:255,green:255,blue:0},{position:128,red:0,green:255,blue:0},{position:255,red:255,green:255,blue:0}],this.gradientCool=[{position:0,red:0,green:0,blue:255},{position:128,red:0,green:255,blue:255},{position:255,red:0,green:0,blue:255}],this.gradientHeat=[{position:0,red:255,green:255,blue:0},{position:43,red:255,green:0,blue:0},{position:85,red:0,green:0,blue:255},{position:128,red:0,green:0,blue:0},{position:171,red:0,green:0,blue:255},{position:223,red:255,green:0,blue:0},{position:255,red:255,green:255,blue:0}],this.gradientMonochrome=[{position:0,red:0,green:0,blue:0},{position:128,red:255,green:255,blue:255},{position:255,red:0,green:0,blue:0}],this.gradientPastel=[{position:0,red:255,green:154,blue:154},{position:85,red:255,green:255,blue:154},{position:170,red:154,green:255,blue:255},{position:255,red:255,green:154,blue:154}],this.config=r,this.colorStartIndex=0,this.colorIterateIndex=0,this.alphaHex=L.colorToHex(Math.floor(255*this.config.alpha));const e=(()=>{switch(r.type.toString()){case O.RAINBOW:return this.gradientRainbows;case O.WARM:return this.gradientWarm;case O.FOREST:return this.gradientForest;case O.COOL:return this.gradientCool;case O.HEAT:return this.gradientHeat;case O.MONOCHROME:return this.gradientMonochrome;case O.PASTEL:return this.gradientPastel;default:throw Error("Not Implemented")}})();let t=1,n=e[0],s=e[1];for(let o=0;o<256;o+=1){const i=(o-n.position)/(s.position-n.position),a=n.red+i*(s.red-n.red),c=n.green+i*(s.green-n.green),l=n.blue+i*(s.blue-n.blue);this.colorTable.push(`#${L.colorToHex(a)}${L.colorToHex(c)}${L.colorToHex(l)}${this.alphaHex}`),s.position===o&&(n=s,t+=1,s=e[t])}}next(){const r=this.colorTable[this.colorIterateIndex];return this.colorIterateIndex=(this.colorIterateIndex+this.config.speed)%256,r}endIteration(){this.colorStartIndex=(this.colorStartIndex+this.config.speed)%256,this.colorIterateIndex=this.colorStartIndex}};let ie=L;ie.colorToHex=r=>{const e=Math.round(r).toString(16);return e.length===1?`0${e}`:e};const b=(r,e,t)=>{const n=Math.sin(t),s=Math.cos(t);return{x:r.x+e.x*s-e.y*n,y:r.y+e.x*n+e.y*s}};class ye{constructor(e,t){this.shaper=e,this.config=t}reset(){const{shaper:e,config:t}=this;this.identity={basePoints:e.configureBasePoints(t),orders:e.configureOrders(t.complexity),config:t,colorGenerator:new ie(t.color),timestamp:0}}simulate(){const{identity:e}=this;if(!e)throw new Error("shape not reset");const{config:t,orders:n,timestamp:s}=e,{rotation:o,scale:i,center:a}=t;e.config.kind===h.RANDOM&&this.reset();const c=o.angle+o.speed*s,l=e.basePoints.map(d=>{const y={x:d.x*i.w,y:d.y*i.h};return b(a,y,c)}),u=l.map(()=>e.colorGenerator.next());return e.colorGenerator.endIteration(),e.timestamp+=1,{points:l,style:t.style,colors:u,orders:n}}}class N{constructor(e){this.x=123456789,this.y=362436069,this.z=521288629,this.generate=()=>{const t=this.x^this.x<<11;return this.x=this.y,this.y=this.z,this.z=this.seed,this.seed=this.seed^this.seed>>>19^(t^t>>>8),this.seed/2**32},this.seed=e}}const G={baseAmplitude:.1};class k{static pointCounts(e){const t=Math.max(Math.min(e,10),2);return 2**(t+1)}configureBasePoints(e){var a,c,l,u;const t=new N(((c=(a=e.randomizer)==null?void 0:a.size)==null?void 0:c.seed)||-1),n=new N(((u=(l=e.randomizer)==null?void 0:l.angle)==null?void 0:u.seed)||-1),{baseAmplitude:s}=G,o=[{x:0,y:-s,index:0},{x:0,y:0,index:1}],i=this.divideBasePoints(e,o[0],o[1],1,.85,f(45),t,n);return[o[0],o[1],...i]}divideBasePoints(e,t,n,s,o,i,a,c){var A,M;const{complexity:l,randomizer:u,mutation:d}=e,y=(((A=u==null?void 0:u.size)==null?void 0:A.amplify)||0)*a.generate(),R=(((M=u==null?void 0:u.angle)==null?void 0:M.amplify)||0)*c.generate(),p=o*(y+((d==null?void 0:d.size)||1)),x=i*(R+((d==null?void 0:d.angle)||1));if(s>=Math.floor(k.pointCounts(l)/2))return[];const X={x:p*(n.x-t.x),y:p*(n.y-t.y)},W=2*s,g=2*s+1,w={...b(n,X,x),index:W},v={...b(n,X,-x),index:g},P=[];return P.push(...this.divideBasePoints(e,n,w,W,p,x,a,c)),P.push(...this.divideBasePoints(e,n,v,g,p,x,a,c)),[w,v,...P.sort((K,$)=>K.index-$.index)]}configureOrders(e){const t=k.pointCounts(e)/2;return[{link:[0,1]},...this.setOrdersRecursive(t,1).sort((n,s)=>n.link[1]-s.link[1])]}setOrdersRecursive(e,t){if(t>=e)return[];const n=2*t,s=2*t+1,o={link:[t,n]},i={link:[t,s]},a=this.setOrdersRecursive(e,n),c=this.setOrdersRecursive(e,s);return[o,i,...a,...c]}}const m={LOOP:"loop",START_END_2X_FASTER:"start_end_2x_faster",END_2X_FASTER:"end_2x_faster",LINEAR:"linear"},E=r=>Array.from({length:r},(e,t)=>t);class C{generate(e){const{type:t,pointCount:n}=e;switch(t){case m.LINEAR:return E(n-1).map(s=>({link:[s,(s+1)%n]}));case m.LOOP:return E(n).map(s=>({link:[s,(s+1)%n]}));case m.START_END_2X_FASTER:return E(n).map(s=>({link:[2*s%n,2*(s+1)%n]}));case m.END_2X_FASTER:return E(n).map(s=>({link:[s,2*(s+1)%n]}));default:return[]}}}const S={CIRCLE:"circle",RANDOM:"random"};class V{generate(e){const{type:t,length:n}=e,{baseAmplitude:s}=G;switch(t){case S.CIRCLE:return E(n).map(i=>2*Math.PI*i/n).map(i=>({x:s*Math.sin(i),y:s*Math.cos(i)}));case S.RANDOM:return E(n).map(()=>({x:s*(Math.random()-.5),y:s*(Math.random()-.5)}));default:return[]}}}class z{static pointCounts(e){return e}configureBasePoints(e){const t=z.pointCounts(e.complexity);return new V().generate({type:S.CIRCLE,length:t})}configureOrders(e){const t=z.pointCounts(e);return new C().generate({type:m.LOOP,pointCount:t})}}class D{static pointCounts(e){return e*40}configureBasePoints(e){const t=D.pointCounts(e.complexity),{baseAmplitude:n}=G;return E(t).map(s=>{const o=2*Math.PI*s/t,i=n*Math.sin(e.complexity*o);return{x:i*Math.cos(o-Math.PI),y:i*Math.sin(o-Math.PI)}})}configureOrders(e){const t=D.pointCounts(e);return new C().generate({type:m.LOOP,pointCount:t})}}class j{recursive(e,t,n,s,o,i,a,c){const{randomizer:l,mutation:u,complexity:d}=e,y=i[t%i.length],R={x:o.x-s.x,y:o.y-s.y},p=[];if(y.folds.forEach((g,w)=>{var ee,te,ne,se,re,oe;const v=(()=>w===0||g.fromStart?s:g.fromEnd?o:p[w-1])(),P=g.fromEnd?-1:1,{length:A,radian:M}=g,K=((te=(ee=l==null?void 0:l.size)==null?void 0:ee.amplify)!=null?te:0)*a.generate(),$=((se=(ne=l==null?void 0:l.angle)==null?void 0:ne.amplify)!=null?se:0)*c.generate(),Z=P*A*(K+((re=u==null?void 0:u.size)!=null?re:1)),ue=M*($+((oe=u==null?void 0:u.angle)!=null?oe:1)),de={x:R.x*Z,y:R.y*Z};p.push(b(v,de,ue))}),n===d)return t===0?[s,...p,o]:t<y.folds.length-1?[...p,o]:[...p,o];const x=[s,...p,o];return[...Array.from({length:x.length-1},(g,w)=>w).map(g=>[x[g],x[g+1]]).map((g,w)=>{const v=(y.folds.length+1)*t+w;return[...this.recursive(e,v,n+1,g[0],g[1],i,a,c)]}).reduce((g,w)=>g.concat(w))]}createPoints(e,t){var c,l,u,d;const n=new N(((l=(c=e.randomizer)==null?void 0:c.size)==null?void 0:l.seed)||-1),s=new N(((d=(u=e.randomizer)==null?void 0:u.angle)==null?void 0:d.seed)||-1),o={x:-.1,y:0},i={x:.1,y:0};return this.recursive(e,0,2,o,i,t,n,s)}}class Q{constructor(){this.engine=new j}static selectFoldRules(e){const t={length:Math.SQRT1_2,radian:f(45)},n={length:Math.SQRT1_2,radian:f(-45)};switch(e){case h.FOLD_CCURVE:return[{folds:[n]}];case h.FOLD_DRAGON:return[{folds:[t]},{folds:[n]}];default:throw new Error("Unsupported curve type!")}}configureBasePoints(e){const t=Q.selectFoldRules(e.kind);return this.engine.createPoints(e,t)}configureOrders(e){const t=2**(e-1)+1;return new C().generate({type:m.LINEAR,pointCount:t})}}class F{static pointCounts(e){return e}configureBasePoints(e){const t=F.pointCounts(e.complexity);return new V().generate({type:S.RANDOM,length:t})}configureOrders(e){const t=F.pointCounts(e);return new C().generate({type:m.LOOP,pointCount:t})}}class B{static pointCounts(e){return e}configureBasePoints(e){const t=B.pointCounts(e.complexity);return new V().generate({type:S.CIRCLE,length:t})}configureOrders(e){const t=B.pointCounts(e);return new C().generate({type:m.START_END_2X_FASTER,pointCount:t})}}class H{static pointCounts(e){return e*2}configureBasePoints(e){const t=H.pointCounts(e.complexity),{baseAmplitude:n}=G;return E(t).map(s=>{const o=2*Math.PI*s/t-Math.PI,i=s%2===0?n:n/4;return{x:i*Math.cos(o),y:i*Math.sin(o)}})}configureOrders(e){return new C().generate({type:m.LOOP,pointCount:H.pointCounts(e)})}}class Y{static pointCounts(e){return e}configureBasePoints(e){return new V().generate({type:S.CIRCLE,length:Y.pointCounts(e.complexity)})}configureOrders(e){return new C().generate({type:m.END_2X_FASTER,pointCount:Y.pointCounts(e)})}}class U{constructor(){this.engine=new j}static getFoldRule(){return[{folds:[{length:1/3,radian:0},{length:1/3,radian:f(60)},{length:1/3,radian:f(-60)}]}]}configureBasePoints(e){const t=U.getFoldRule();return this.engine.createPoints(e,t)}configureOrders(e){const t=2**(2*(e-1))+1;return new C().generate({type:m.LINEAR,pointCount:t})}}class J{constructor(){this.engine=new j}static selectFoldRules(e){const t=[{folds:[{length:.5,radian:f(90)},{length:.5,radian:0,fromStart:!0},{length:.5,radian:f(90),fromEnd:!0}]}],n=[{folds:[{length:1/2,radian:f(90)},{length:1/2,radian:0,fromStart:!0},{length:1/2,radian:f(-90),fromEnd:!0}]}];return e===h.TRI_CIS?n:t}configureBasePoints(e){const t=J.selectFoldRules(e.kind);return this.engine.createPoints(e,t)}configureOrders(e){const t=2**(2*(e-1))+1;return new C().generate({type:m.LINEAR,pointCount:t})}}class me{constructor(){this.kochCurve=new U}configureBasePoints(e){const t=e.kind===h.KOCH_TRIANGLE_INNER;let n=this.kochCurve.configureBasePoints(e);const s=f(120);t&&(n=n.map(a=>({...a,y:-a.y}))),n=n.map(a=>({...a,y:a.y+.1/Math.sqrt(3)}));const o=n.map(a=>b({x:0,y:0},a,s)),i=o.map(a=>b({x:0,y:0},a,s));return[...n,...i,...o]}configureOrders(e){const t=3*(2**(2*(e-1))+1);return new C().generate({type:m.LINEAR,pointCount:t})}}const ae=class{constructor(){this.load=()=>{const e=ge.charts.map(t=>{const n={...t,kind:t.kind,style:{...t.style,type:t.style.type},color:{...t.color,type:t.color.type},rotation:{angle:f(t.rotation.angle),speed:f(t.rotation.speed)},complexity:t.complexity};return{chart:ae.instantiateChart(n.kind),config:n}}).map(t=>new ye(t.chart,t.config));return e.map(t=>t.reset()),e}}};let le=ae;le.instantiateChart=r=>{switch(r){case h.STAR:return new B;case h.STARMINE:return new H;case h.SUNRISE:return new Y;case h.CIRCLE:return new z;case h.CLOVER:return new D;case h.RANDOM:return new F;case h.FOLD_CCURVE:case h.FOLD_DRAGON:return new Q;case h.KOCH_CURVE:return new U;case h.KOCH_TRIANGLE_INNER:case h.KOCH_TRIANGLE_OUTER:return new me;case h.TRI_CIS:case h.TRI_TRANS:return new J;case h.BINARY_TREE:return new k;default:throw new Error("Unsupported chart type!")}};class fe{constructor(e){this.start=t=>{const n=1e3/t;setInterval(()=>{const s=this.simulate();this.visualizer.draw(s)},n)},this.restrictScroll=()=>{this.scrollY<0&&(this.scrollY=0),this.scrollY>3400&&(this.scrollY=3400)},this.handleScroll=t=>{this.scrollY+=t,this.restrictScroll(),this.scrollEndCount=6},this.handleTouchScroll=t=>{this.touchScrollPrevY&&(this.scrollY-=2*(t-this.touchScrollPrevY)),this.touchScrollPrevY=t,this.restrictScroll(),this.scrollEndCount=6},this.simulate=()=>{if(this.scrollEndCount-=1,this.scrollEndCount===0){this.touchScrollPrevY=void 0;const n=`${window.location.pathname}?depth=${this.scrollY}`;window.history.replaceState(null,"Fractal-Visualizer depth: + scrollY",n)}return this.simulators.map(n=>n.simulate()).map(n=>({...n,points:n.points.map(s=>({...s,y:s.y-this.scrollY/300}))}))},this.visualizer=e,this.simulators=new le().load(),this.scrollEndCount=0,this.scrollY=(()=>{const t=new URL(document.location.href).searchParams;return parseInt(t.get("depth")||"0",10)})()}}const T=class{constructor(){this.nullableContext=null,this.setContext=r=>{this.nullableContext=r;const e=r.canvas.width,t=r.canvas.height;r.fillStyle="rgb(0, 0, 0)",r.fillRect(0,0,e,t)},this.draw=r=>{const e=this.nullableContext;if(e!==null){const t=e.canvas.width,n=e.canvas.height;e.fillStyle="rgba(0, 0, 0, 0.05)",e.fillRect(0,0,t,n),r.forEach(s=>{T.shouldDrawChart(s)&&T.drawChart(e,s,t,n)})}}}};let I=T;I.drawLine=(r,e,t,n,s)=>{r.lineWidth=n,r.strokeStyle=s,r.beginPath(),r.moveTo(e.x,e.y),r.lineTo(t.x,t.y),r.closePath(),r.stroke()};I.drawTriangle=(r,e,t,n,s)=>{const o=t.x-e.x,i=t.y-e.y,a=Math.sqrt(o*o+i*i),c=o/a,l=i/a;r.fillStyle=s,r.beginPath(),r.moveTo(t.x,t.y),r.lineTo(e.x+l*n,e.y-c*n),r.lineTo(e.x-l*n,e.y+c*n),r.lineTo(t.x,t.y),r.closePath(),r.fill()};I.drawCircles=(r,e,t,n,s)=>{const o=Math.log(n||11),i=t.x-e.x,a=t.y-e.y,c=Math.sqrt(i*i+a*a),l=o*c,u=2*Math.PI;r.fillStyle=s,r.beginPath(),r.arc(e.x+i*.3,e.y+a*.3,l*.3,0,u),r.fill(),r.beginPath(),r.arc(e.x+i*.6,e.y+a*.6,l*.15,0,u),r.fill()};I.drawCurve=(r,e,t,n,s)=>{const o=1.5*(n||1),i=t.x-e.x,a=t.y-e.y,c=Math.sqrt(i*i+a*a),l=i/c,u=a/c,d=e.x+(t.x-e.x)/2,y=e.y+(t.y-e.y)/2,R=u*o,p=l*o;r.fillStyle=s,r.beginPath(),r.moveTo(e.x,e.y),r.bezierCurveTo(d+1.5*R,y-1.5*p,d+1.5*R,y-1.5*p,t.x,t.y),r.bezierCurveTo(d+2*R,y-2*p,d+2*R,y-2*p,e.x,e.y),r.closePath(),r.fill()};I.shouldDrawChart=r=>{const e=r.points.map(s=>s.y).sort(),t=Math.floor(e.length*2/10),n=Math.floor(e.length*8/10);return e[t]>-1&&e[n]<2};I.drawChart=(r,e,t,n)=>{const s=e.points.map(a=>({x:a.x*t,y:a.y*n})),{style:o}=e,i=(()=>{switch(o.type){case _.LINE:return T.drawLine;case _.TRIANGLE:return T.drawTriangle;case _.CIRCLES:return T.drawCircles;case _.CURVE:return T.drawCurve;default:throw new Error("Invalid style type!")}})();for(let a=0;a<e.orders.length;a+=1){const c=e.orders[a],{link:l}=c,u=e.colors[a],d=s[l[0]],y=s[l[1]];i(r,d,y,o.thickness,u)}};const q=class{constructor(r){const e=document.getElementById("canvas");if(e instanceof HTMLCanvasElement){if("ontouchstart"in window){const n=o=>{o.preventDefault()},s=o=>{o.preventDefault(),r.onTouchScroll(o.touches[0].pageY)};e.addEventListener("touchstart",n,{passive:!1}),e.addEventListener("touchend",n,{passive:!1}),e.addEventListener("touchcancel",n,{passive:!1}),e.addEventListener("touchmove",s,{passive:!1})}else e.onwheel=n=>{r.onScroll(n.deltaY)};window.onresize=()=>{q.adjustCanvas(e)};const t=e.getContext("2d");t instanceof CanvasRenderingContext2D&&(q.adjustCanvas(e),r.onCanvasReady(t))}}};let ce=q;ce.adjustCanvas=r=>{const e=window.devicePixelRatio;r.width=window.innerWidth*e*2,r.height=window.innerHeight*e*2};class we{constructor(e,t){this.onCanvasReady=n=>{this.visualizer.setContext(n),this.simulator.start(50)},this.onScroll=n=>{this.simulator.handleScroll(n)},this.onTouchScroll=n=>{this.simulator.handleTouchScroll(n)},this.visualizer=e,this.simulator=t}}class Ce{constructor(){const e=new I,t=new fe(e),n=new we(e,t);new ce(n)}}new Ce;
