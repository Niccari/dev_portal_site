!function(){"use strict";var e=async e=>new Promise((t=>{setTimeout((()=>{t()}),e)}));const t=(e,t)=>e.type!==t?Promise.reject(new Error("Invalid file type")):new Promise(((n,r)=>{const s=new FileReader;s.onload=e=>{const t=e.target?.result;t?n(t):r()},t.includes("image")?s.readAsDataURL(e):s.readAsBinaryString(e)})),n=(e,t,n,r)=>{const s=[];for(let o=0;o<n;o+=1){s[o]=[];for(let n=0;n<t;n+=1)s[o][n]=r(e+2*(n+o*t))}return s},r=40;class s{constructor(){this.addEvents=(e,t)=>{s.addFileEvent("gif_file",e),s.addFileEvent("dat_file",t)},this.showMap=async e=>{const t=s.fetchImageTag(),n=s.getCanvasById("gif_map_preview");if(!t||!n)return;const o=n.getContext("2d",{alpha:!1});if(!o)return;const{sizeMap:a}=e;n.width=a*r,n.height=a*r;const{map:i}=e;for(let n=0;n<a;n+=1)for(let s=0;s<a;s+=1){const{bg:a}=i[n][s],{obj:c}=i[n][s],d=e.bgAttrs[a],l=e.objAttrs[c];if(d&&l){const e=d[6],a=d[7],i=l[6],c=l[7];o.drawImage(t,e,a,r,r,s*r,n*r,r,r),0===i&&0===c||o.drawImage(t,i,c,r,r,s*r,n*r,r,r)}}},this.showGif=async e=>new Promise(((t,n)=>{const r=s.fetchImageTag();r?(r.onload=()=>{t({width:r.width,height:r.height,dataUrl:e})},r.src=e):n()})),this.showIfNeeded=(e,t)=>{const n=s.resolveTag(e),r=document.getElementById(n);if(!r)return;r.style.display=t?"inline-block":"none"},this.showError=async t=>{const n=document.getElementById("error_message");n&&(n.style.display="block",n.innerHTML=t,await e(3e3),n.style.display="none")}}}s.addFileEvent=(e,t)=>{const n=document.getElementById(e);if(!n)return;const r=e=>{const n=e.target?.files;n&&t(n[0])};n.addEventListener("change",r),n.addEventListener("dragstart",r)},s.fetchImageTag=()=>document.getElementById("gif_src_preview"),s.getCanvasById=e=>document.getElementById(e)||null,s.resolveTag=e=>{switch(e){case 2:return"gif_uploaded";case 1:return"dat_uploaded";case 3:return"is_loading";default:return""}};const o=new class{showGifInfo(e){const{width:t,height:n}=e;return[`横方向の画像数, 縦方向の画像数 = ${Math.floor(t/r)}, ${Math.floor(n/r)}`]}showMapInfo(e){return["マップバージョン:"+e.version/10,`HP:${e.hpInit}/${e.hpMap}`,`攻撃力:${e.strInit}`,`防御力:${e.defInit}`,`所持金:${e.goldInit}`,`所持アイテム番号:${e.items.map((e=>e.toString())).join(",")}`,`MAX HP:${e.hpMap}`,`背景パーツ 最大数:${e.numBg}`,`物体パーツ 最大数:${e.numObj}`,`初期位置(x, y): (${e.xInit}, ${e.yInit})`,`ゲームオーバー位置(x, y): (${e.xGameover}, ${e.yGameover})`,`マップサイズ(w, h):${e.sizeMap}x${e.sizeMap}`]}resolveErrorMessage(e){switch(e){case 1:return"マップファイルを読み込めませんでした。WWAで使用しているマップファイルかご確認ください。";case 2:return"画像ファイルを読み込めませんでした。WWAで使用している画像ファイルかご確認ください。";default:return""}}},a={mapInfo:void 0,imageInfo:void 0},i=new s,c=t=>{a.imageInfo=t.imageInfo,a.mapInfo=t.mapInfo,(async()=>{const{imageInfo:t,mapInfo:n}=a,r=void 0!==n,s=void 0!==t,o=r&&s;i.showIfNeeded(3,!0),i.showIfNeeded(1,r),i.showIfNeeded(2,s),o&&(await e(50),await i.showMap(n)),i.showIfNeeded(3,!1)})()};i.addEvents((async e=>{const n=await(async e=>{const n=await t(e,"image/gif");return"string"==typeof n?n:Promise.reject(new Error("Unsupported return type"))})(e).catch((()=>{const e=o.resolveErrorMessage(2);i.showError(e)}));n&&(i.showGif(n),c({...a,imageInfo:await i.showGif(n)}))}),(async e=>{const r=await(async e=>{const r=await t(e,"");if("string"!=typeof r)throw new Error("Unsupported return type");return(e=>{const t=(r=e,e=>r[e]+256*r[e+1]);var r;const s=t(46),o=t(34),a=t(36);if(!((e,t,n)=>e<=501||t<=200||n<=200)(s,o,a))throw new Error("Invalid data size!");const i=90+s*s*4,c=i+60*o*2,d=((e,t,n)=>{const r=[];for(let e=0;e<t;e+=1){r[e]=[];for(let s=0;s<t;s+=1){const o=90+2*(s+e*t),a=o+t*t*2;r[e][s]={obj:n(a),bg:n(o)}}}return r})(0,s,t),l=n(i,60,o,t),f=n(c,60,a,t),g=Array.from(Array(12).keys()).map((e=>t(20+e)%256));return{check:t(0),version:t(2),hpInit:t(10),strInit:t(12),defInit:t(14),goldInit:t(16),items:g,hpMap:t(32),numBg:o,numObj:a,xInit:t(38),yInit:t(40),xGameover:t(42),yGameover:t(44),sizeMap:s,numMessage:t(48),map:d,bgAttrs:l,objAttrs:f}})((e=>{const t=[];for(let n=0;n<e.length-2;){const r=e[n];if(r===e[n+1]){const s=e[n+2]+1;t.push(...Array(s).fill(r)),n+=3}else t.push(r),n+=1}return t.push(...e.slice(e.length-2)),t})(r.split("").map((e=>e.charCodeAt(0)))))})(e).catch((()=>{const e=o.resolveErrorMessage(1);i.showError(e)}));r&&c({...a,mapInfo:r})}))}();