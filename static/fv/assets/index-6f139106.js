var ce=Object.defineProperty;var de=(u,e,t)=>e in u?ce(u,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):u[e]=t;var i=(u,e,t)=>(de(u,typeof e!="symbol"?e+"":e,t),t);(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))n(s);new MutationObserver(s=>{for(const r of s)if(r.type==="childList")for(const o of r.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&n(o)}).observe(document,{childList:!0,subtree:!0});function t(s){const r={};return s.integrity&&(r.integrity=s.integrity),s.referrerPolicy&&(r.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?r.credentials="include":s.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function n(s){if(s.ep)return;s.ep=!0;const r=t(s);fetch(s.href,r)}})();const ue=[{kind:"koch_triangle_outer",complexity:4,center:{x:.2,y:.3},scale:{w:1,h:1},rotation:{angle:30,speed:1},mutation:{size:1,angle:1},randomizer:{size:{amplify:10,seed:-90129041},angle:{amplify:-2.4,seed:1124901342}},style:{type:"line",thickness:3},color:{type:"cool",alpha:.9,speed:1}},{kind:"koch_triangle_inner",complexity:5,center:{x:.5,y:1.2},scale:{w:.4,h:.4},rotation:{angle:30,speed:-.9},mutation:{size:-1,angle:1},randomizer:{size:{amplify:0,seed:90129041},angle:{amplify:0,seed:124818419}},style:{type:"line",thickness:10},color:{type:"warm",alpha:.9,speed:.5}},{kind:"binary_tree",complexity:8,center:{x:.5,y:1.9},scale:{w:.2,h:.2},rotation:{angle:10,speed:-.2},mutation:{size:1.1,angle:.88},randomizer:{size:{amplify:.5,seed:90129041},angle:{amplify:-.1,seed:124818419}},style:{type:"triangle",thickness:10},color:{type:"rainbow",alpha:.9,speed:.5}},{kind:"tri_cis",complexity:6,center:{x:.8,y:3.3},scale:{w:1,h:1},rotation:{angle:80,speed:0},mutation:{size:1.2,angle:1.7},randomizer:{size:{amplify:0,seed:90129041},angle:{amplify:0,seed:124818419}},style:{type:"line",thickness:3},color:{type:"heat",alpha:.9,speed:.5}},{kind:"starmine",complexity:10,center:{x:.2,y:4.2},scale:{w:3,h:3},rotation:{angle:20,speed:.5},style:{type:"triangle",thickness:3},color:{type:"warm",alpha:.9,speed:.5}},{kind:"starmine",complexity:8,center:{x:.4,y:4.3},scale:{w:2.5,h:2.5},rotation:{angle:20,speed:.5},style:{type:"triangle",thickness:3},color:{type:"forest",alpha:.9,speed:.5}},{kind:"starmine",complexity:8,center:{x:.6,y:4.4},scale:{w:2,h:2},rotation:{angle:20,speed:.5},style:{type:"triangle",thickness:3},color:{type:"cool",alpha:.9,speed:.5}},{kind:"starmine",complexity:6,center:{x:.8,y:4.5},scale:{w:1.5,h:1.5},rotation:{angle:20,speed:.5},style:{type:"triangle",thickness:3},color:{type:"monochrome",alpha:.9,speed:.5}},{kind:"sunrise",complexity:100,center:{x:.4,y:5.1},scale:{w:3,h:3},rotation:{angle:-20,speed:0},style:{type:"curve",thickness:4},color:{type:"heat",alpha:.9,speed:.5}},{kind:"fold_ccurve",complexity:9,center:{x:.4,y:6},scale:{w:.4,h:.4},rotation:{angle:30,speed:0},mutation:{size:1,angle:1.5},randomizer:{size:{amplify:3,seed:90129041},angle:{amplify:-.6,seed:124818419}},style:{type:"line",thickness:5},color:{type:"pastel",alpha:.6,speed:.5}},{kind:"random",complexity:100,center:{x:.7,y:8},scale:{w:30,h:30},rotation:{angle:30,speed:0},mutation:{size:1,angle:1.5},randomizer:{size:{amplify:.1,seed:90129041},angle:{amplify:.1,seed:124818419}},style:{type:"circles",thickness:1.2},color:{type:"cool",alpha:.1,speed:10}},{kind:"random",complexity:100,center:{x:.7,y:9.5},scale:{w:30,h:30},rotation:{angle:30,speed:0},mutation:{size:1,angle:1.5},randomizer:{size:{amplify:.1,seed:90129041},angle:{amplify:.1,seed:124818419}},style:{type:"circles",thickness:1.2},color:{type:"warm",alpha:.1,speed:10}},{kind:"fold_dragon",complexity:10,center:{x:.5,y:11.2},scale:{w:.7,h:1.2},rotation:{angle:90,speed:.02},mutation:{size:.6,angle:-3.4},randomizer:{size:{amplify:.5,seed:-90129041},angle:{amplify:.1,seed:124818419}},style:{type:"curve",thickness:5},color:{type:"rainbow",alpha:.4,speed:2}}],he={charts:ue},C=u=>u*Math.PI/180,k={LINE:"line",TRIANGLE:"triangle",CIRCLES:"circles",CURVE:"curve"},p={CIRCLE:"start",STAR:"star",CLOVER:"clover",SUNRISE:"sunrise",RANDOM:"random",STARMINE:"starmine",KOCH_CURVE:"koch_curve",KOCH_TRIANGLE_INNER:"koch_triangle_inner",KOCH_TRIANGLE_OUTER:"koch_triangle_outer",FOLD_DRAGON:"fold_dragon",FOLD_CCURVE:"fold_ccurve",TRI_CIS:"tri_cis",TRI_TRANS:"tri_trans",BINARY_TREE:"binary_tree"},v={RAINBOW:"rainbow",WARM:"warm",FOREST:"forest",COOL:"cool",HEAT:"heat",MONOCHROME:"monochrome",PASTEL:"pastel"},S=class{constructor(e){i(this,"config");i(this,"colorStartIndex");i(this,"colorIterateIndex");i(this,"colorTable",[]);i(this,"alphaHex");i(this,"gradientRainbows",[{position:0,red:255,green:0,blue:0},{position:43,red:255,green:255,blue:0},{position:85,red:0,green:255,blue:0},{position:128,red:0,green:255,blue:255},{position:171,red:0,green:0,blue:255},{position:223,red:255,green:0,blue:255},{position:255,red:255,green:0,blue:0}]);i(this,"gradientWarm",[{position:0,red:255,green:0,blue:0},{position:128,red:255,green:255,blue:0},{position:255,red:255,green:0,blue:0}]);i(this,"gradientForest",[{position:0,red:255,green:255,blue:0},{position:128,red:0,green:255,blue:0},{position:255,red:255,green:255,blue:0}]);i(this,"gradientCool",[{position:0,red:0,green:0,blue:255},{position:128,red:0,green:255,blue:255},{position:255,red:0,green:0,blue:255}]);i(this,"gradientHeat",[{position:0,red:255,green:255,blue:0},{position:43,red:255,green:0,blue:0},{position:85,red:0,green:0,blue:255},{position:128,red:0,green:0,blue:0},{position:171,red:0,green:0,blue:255},{position:223,red:255,green:0,blue:0},{position:255,red:255,green:255,blue:0}]);i(this,"gradientMonochrome",[{position:0,red:0,green:0,blue:0},{position:128,red:255,green:255,blue:255},{position:255,red:0,green:0,blue:0}]);i(this,"gradientPastel",[{position:0,red:255,green:154,blue:154},{position:85,red:255,green:255,blue:154},{position:170,red:154,green:255,blue:255},{position:255,red:255,green:154,blue:154}]);this.config=e,this.colorStartIndex=0,this.colorIterateIndex=0,this.alphaHex=S.colorToHex(Math.floor(255*this.config.alpha));const t=(()=>{switch(e.type.toString()){case v.RAINBOW:return this.gradientRainbows;case v.WARM:return this.gradientWarm;case v.FOREST:return this.gradientForest;case v.COOL:return this.gradientCool;case v.HEAT:return this.gradientHeat;case v.MONOCHROME:return this.gradientMonochrome;case v.PASTEL:return this.gradientPastel;default:throw Error("Not Implemented")}})();let n=1,s=t[0],r=t[1];for(let o=0;o<256;o+=1){const a=(o-s.position)/(r.position-s.position),l=s.red+a*(r.red-s.red),d=s.green+a*(r.green-s.green),c=s.blue+a*(r.blue-s.blue);this.colorTable.push(`#${S.colorToHex(l)}${S.colorToHex(d)}${S.colorToHex(c)}${this.alphaHex}`),r.position===o&&(s=r,n+=1,r=t[n])}}next(){const e=this.colorTable[this.colorIterateIndex];return this.colorIterateIndex=(this.colorIterateIndex+this.config.speed)%256,e}endIteration(){this.colorStartIndex=(this.colorStartIndex+this.config.speed)%256,this.colorIterateIndex=this.colorStartIndex}};let _=S;i(_,"colorToHex",e=>{const t=Math.round(e).toString(16);return t.length===1?`0${t}`:t});const A=(u,e,t)=>{const n=Math.sin(t),s=Math.cos(t);return{x:u.x+e.x*s-e.y*n,y:u.y+e.x*n+e.y*s}};class pe{constructor(e,t){i(this,"shaper");i(this,"config");i(this,"identity");this.shaper=e,this.config=t}reset(){const{shaper:e,config:t}=this;this.identity={basePoints:e.configureBasePoints(t),orders:e.configureOrders(t.complexity),config:t,colorGenerator:new _(t.color),timestamp:0}}simulate(){const{identity:e}=this;if(!e)throw new Error("shape not reset");const{config:t,orders:n,timestamp:s}=e,{rotation:r,scale:o,center:a}=t;e.config.kind===p.RANDOM&&this.reset();const l=r.angle+r.speed*s,d=e.basePoints.map(h=>{const m={x:h.x*o.w,y:h.y*o.h};return A(a,m,l)}),c=d.map(()=>e.colorGenerator.next());return e.colorGenerator.endIteration(),e.timestamp+=1,{points:d,style:t.style,colors:c,orders:n}}}class F{constructor(e){i(this,"x",123456789);i(this,"y",362436069);i(this,"z",521288629);i(this,"seed");i(this,"generate",()=>{const e=this.x^this.x<<11;return this.x=this.y,this.y=this.z,this.z=this.seed,this.seed=this.seed^this.seed>>>19^(e^e>>>8),this.seed/2**32});this.seed=e}}const $={baseAmplitude:.1};class Y{static pointCounts(e){return 2**(Math.max(Math.min(e,10),2)+1)}configureBasePoints(e){var a,l,d,c;const t=new F(((l=(a=e.randomizer)==null?void 0:a.size)==null?void 0:l.seed)||-1),n=new F(((c=(d=e.randomizer)==null?void 0:d.angle)==null?void 0:c.seed)||-1),{baseAmplitude:s}=$,r=[{x:0,y:-s,index:0},{x:0,y:0,index:1}],o=this.divideBasePoints(e,r[0],r[1],1,.85,C(45),t,n);return[r[0],r[1],...o]}divideBasePoints(e,t,n,s,r,o,a,l){var M,N;const{complexity:d,randomizer:c,mutation:h}=e,m=(((M=c==null?void 0:c.size)==null?void 0:M.amplify)||0)*a.generate(),R=(((N=c==null?void 0:c.angle)==null?void 0:N.amplify)||0)*l.generate(),g=r*(m+((h==null?void 0:h.size)||1)),w=o*(R+((h==null?void 0:h.angle)||1));if(s>=Math.floor(Y.pointCounts(d)/2))return[];const V={x:g*(n.x-t.x),y:g*(n.y-t.y)},Q=2*s,y=2*s+1,x={...A(n,V,w),index:Q},P={...A(n,V,-w),index:y},b=[];return b.push(...this.divideBasePoints(e,n,x,Q,g,w,a,l)),b.push(...this.divideBasePoints(e,n,P,y,g,w,a,l)),[x,P,...b.sort((J,Z)=>J.index-Z.index)]}configureOrders(e){const t=Y.pointCounts(e)/2;return[{link:[0,1]},...this.setOrdersRecursive(t,1).sort((n,s)=>n.link[1]-s.link[1])]}setOrdersRecursive(e,t){if(t>=e)return[];const n=2*t,s=2*t+1,r={link:[t,n]},o={link:[t,s]},a=this.setOrdersRecursive(e,n),l=this.setOrdersRecursive(e,s);return[r,o,...a,...l]}}const f={LOOP:"loop",START_END_2X_FASTER:"start_end_2x_faster",END_2X_FASTER:"end_2x_faster",LINEAR:"linear"},T=u=>Array.from({length:u},(e,t)=>t);class E{generate(e){const{type:t,pointCount:n}=e;switch(t){case f.LINEAR:return T(n-1).map(s=>({link:[s,(s+1)%n]}));case f.LOOP:return T(n).map(s=>({link:[s,(s+1)%n]}));case f.START_END_2X_FASTER:return T(n).map(s=>({link:[2*s%n,2*(s+1)%n]}));case f.END_2X_FASTER:return T(n).map(s=>({link:[s,2*(s+1)%n]}));default:return[]}}}const L={CIRCLE:"circle",RANDOM:"random"};class q{generate(e){const{type:t,length:n}=e,{baseAmplitude:s}=$;switch(t){case L.CIRCLE:return T(n).map(o=>2*Math.PI*o/n).map(o=>({x:s*Math.sin(o),y:s*Math.cos(o)}));case L.RANDOM:return T(n).map(()=>({x:s*(Math.random()-.5),y:s*(Math.random()-.5)}));default:return[]}}}class H{static pointCounts(e){return e}configureBasePoints(e){const t=H.pointCounts(e.complexity);return new q().generate({type:L.CIRCLE,length:t})}configureOrders(e){const t=H.pointCounts(e);return new E().generate({type:f.LOOP,pointCount:t})}}class B{static pointCounts(e){return e*40}configureBasePoints(e){const t=B.pointCounts(e.complexity),{baseAmplitude:n}=$;return T(t).map(s=>{const r=2*Math.PI*s/t,o=n*Math.sin(e.complexity*r);return{x:o*Math.cos(r-Math.PI),y:o*Math.sin(r-Math.PI)}})}configureOrders(e){const t=B.pointCounts(e);return new E().generate({type:f.LOOP,pointCount:t})}}class ee{recursive(e,t,n,s,r,o,a,l){const{randomizer:d,mutation:c,complexity:h}=e,m=o[t%o.length],R={x:r.x-s.x,y:r.y-s.y},g=[];if(m.folds.forEach((y,x)=>{var oe,ie;const P=(()=>x===0||y.fromStart?s:y.fromEnd?r:g[x-1])(),b=y.fromEnd?-1:1,{length:M,radian:N}=y,J=(((oe=d==null?void 0:d.size)==null?void 0:oe.amplify)??0)*a.generate(),Z=(((ie=d==null?void 0:d.angle)==null?void 0:ie.amplify)??0)*l.generate(),re=b*M*(J+((c==null?void 0:c.size)??1)),ae=N*(Z+((c==null?void 0:c.angle)??1)),le={x:R.x*re,y:R.y*re};g.push(A(P,le,ae))}),n===h)return t===0?[s,...g,r]:t<m.folds.length-1?[...g,r]:[...g,r];const w=[s,...g,r];return[...Array.from({length:w.length-1},(y,x)=>x).map(y=>[w[y],w[y+1]]).map((y,x)=>{const P=(m.folds.length+1)*t+x;return[...this.recursive(e,P,n+1,y[0],y[1],o,a,l)]}).reduce((y,x)=>y.concat(x))]}createPoints(e,t){var l,d,c,h;const n=new F(((d=(l=e.randomizer)==null?void 0:l.size)==null?void 0:d.seed)||-1),s=new F(((h=(c=e.randomizer)==null?void 0:c.angle)==null?void 0:h.seed)||-1),r={x:-.1,y:0},o={x:.1,y:0};return this.recursive(e,0,2,r,o,t,n,s)}}class te{constructor(){i(this,"engine");this.engine=new ee}static selectFoldRules(e){const t={length:Math.SQRT1_2,radian:C(45)},n={length:Math.SQRT1_2,radian:C(-45)};switch(e){case p.FOLD_CCURVE:return[{folds:[n]}];case p.FOLD_DRAGON:return[{folds:[t]},{folds:[n]}];default:throw new Error("Unsupported curve type!")}}configureBasePoints(e){const t=te.selectFoldRules(e.kind);return this.engine.createPoints(e,t)}configureOrders(e){const t=2**(e-1)+1;return new E().generate({type:f.LINEAR,pointCount:t})}}class G{static pointCounts(e){return e}configureBasePoints(e){const t=G.pointCounts(e.complexity);return new q().generate({type:L.RANDOM,length:t})}configureOrders(e){const t=G.pointCounts(e);return new E().generate({type:f.LOOP,pointCount:t})}}class U{static pointCounts(e){return e}configureBasePoints(e){const t=U.pointCounts(e.complexity);return new q().generate({type:L.CIRCLE,length:t})}configureOrders(e){const t=U.pointCounts(e);return new E().generate({type:f.START_END_2X_FASTER,pointCount:t})}}class X{static pointCounts(e){return e*2}configureBasePoints(e){const t=X.pointCounts(e.complexity),{baseAmplitude:n}=$;return T(t).map(s=>{const r=2*Math.PI*s/t-Math.PI,o=s%2===0?n:n/4;return{x:o*Math.cos(r),y:o*Math.sin(r)}})}configureOrders(e){return new E().generate({type:f.LOOP,pointCount:X.pointCounts(e)})}}class W{static pointCounts(e){return e}configureBasePoints(e){return new q().generate({type:L.CIRCLE,length:W.pointCounts(e.complexity)})}configureOrders(e){return new E().generate({type:f.END_2X_FASTER,pointCount:W.pointCounts(e)})}}class j{constructor(){i(this,"engine");this.engine=new ee}static getFoldRule(){return[{folds:[{length:1/3,radian:0},{length:1/3,radian:C(60)},{length:1/3,radian:C(-60)}]}]}configureBasePoints(e){const t=j.getFoldRule();return this.engine.createPoints(e,t)}configureOrders(e){const t=2**(2*(e-1))+1;return new E().generate({type:f.LINEAR,pointCount:t})}}class ne{constructor(){i(this,"engine");this.engine=new ee}static selectFoldRules(e){const t=[{folds:[{length:.5,radian:C(90)},{length:.5,radian:0,fromStart:!0},{length:.5,radian:C(90),fromEnd:!0}]}],n=[{folds:[{length:1/2,radian:C(90)},{length:1/2,radian:0,fromStart:!0},{length:1/2,radian:C(-90),fromEnd:!0}]}];return e===p.TRI_CIS?n:t}configureBasePoints(e){const t=ne.selectFoldRules(e.kind);return this.engine.createPoints(e,t)}configureOrders(e){const t=2**(2*(e-1))+1;return new E().generate({type:f.LINEAR,pointCount:t})}}class ge{constructor(){i(this,"kochCurve");this.kochCurve=new j}configureBasePoints(e){const t=e.kind===p.KOCH_TRIANGLE_INNER;let n=this.kochCurve.configureBasePoints(e);const s=C(120);t&&(n=n.map(a=>({...a,y:-a.y}))),n=n.map(a=>({...a,y:a.y+.1/Math.sqrt(3)}));const r=n.map(a=>A({x:0,y:0},a,s)),o=r.map(a=>A({x:0,y:0},a,s));return[...n,...o,...r]}configureOrders(e){const t=3*(2**(2*(e-1))+1);return new E().generate({type:f.LINEAR,pointCount:t})}}const se=class{constructor(){i(this,"load",()=>{const t=he.charts.map(n=>{const s={...n,kind:n.kind,style:{...n.style,type:n.style.type},color:{...n.color,type:n.color.type},rotation:{angle:C(n.rotation.angle),speed:C(n.rotation.speed)},complexity:n.complexity};return{chart:se.instantiateChart(s.kind),config:s}}).map(n=>new pe(n.chart,n.config));return t.map(n=>n.reset()),t})}};let z=se;i(z,"instantiateChart",e=>{switch(e){case p.STAR:return new U;case p.STARMINE:return new X;case p.SUNRISE:return new W;case p.CIRCLE:return new H;case p.CLOVER:return new B;case p.RANDOM:return new G;case p.FOLD_CCURVE:case p.FOLD_DRAGON:return new te;case p.KOCH_CURVE:return new j;case p.KOCH_TRIANGLE_INNER:case p.KOCH_TRIANGLE_OUTER:return new ge;case p.TRI_CIS:case p.TRI_TRANS:return new ne;case p.BINARY_TREE:return new Y;default:throw new Error("Unsupported chart type!")}});class ye{constructor(e){i(this,"visualizer");i(this,"simulators");i(this,"scrollEndCount");i(this,"touchScrollPrevY");i(this,"scrollY");i(this,"start",e=>{const t=1e3/e;setInterval(()=>{const n=this.simulate();this.visualizer.draw(n)},t)});i(this,"restrictScroll",()=>{this.scrollY<0&&(this.scrollY=0),this.scrollY>3400&&(this.scrollY=3400)});i(this,"handleScroll",e=>{this.scrollY+=e,this.restrictScroll(),this.scrollEndCount=6});i(this,"handleTouchScroll",e=>{this.touchScrollPrevY&&(this.scrollY-=2*(e-this.touchScrollPrevY)),this.touchScrollPrevY=e,this.restrictScroll(),this.scrollEndCount=6});i(this,"simulate",()=>{if(this.scrollEndCount-=1,this.scrollEndCount===0){this.touchScrollPrevY=void 0;const t=`${window.location.pathname}?depth=${this.scrollY}`;window.history.replaceState(null,"Fractal-Visualizer depth: + scrollY",t)}return this.simulators.map(t=>t.simulate()).map(t=>({...t,points:t.points.map(n=>({...n,y:n.y-this.scrollY/300}))}))});this.visualizer=e,this.simulators=new z().load(),this.scrollEndCount=0,this.scrollY=(()=>{const t=new URL(document.location.href).searchParams;return parseInt(t.get("depth")||"0",10)})()}}const I=class{constructor(){i(this,"nullableContext",null);i(this,"setContext",e=>{this.nullableContext=e;const t=e.canvas.width,n=e.canvas.height;e.fillStyle="rgb(0, 0, 0)",e.fillRect(0,0,t,n)});i(this,"draw",e=>{const t=this.nullableContext;if(t!==null){const n=t.canvas.width,s=t.canvas.height;t.fillStyle="rgba(0, 0, 0, 0.05)",t.fillRect(0,0,n,s),e.forEach(r=>{I.shouldDrawChart(r)&&I.drawChart(t,r,n,s)})}})}};let O=I;i(O,"drawLine",(e,t,n,s,r)=>{e.lineWidth=s,e.strokeStyle=r,e.beginPath(),e.moveTo(t.x,t.y),e.lineTo(n.x,n.y),e.closePath(),e.stroke()}),i(O,"drawTriangle",(e,t,n,s,r)=>{const o=n.x-t.x,a=n.y-t.y,l=Math.sqrt(o*o+a*a),d=o/l,c=a/l;e.fillStyle=r,e.beginPath(),e.moveTo(n.x,n.y),e.lineTo(t.x+c*s,t.y-d*s),e.lineTo(t.x-c*s,t.y+d*s),e.lineTo(n.x,n.y),e.closePath(),e.fill()}),i(O,"drawCircles",(e,t,n,s,r)=>{const o=Math.log(s||11),a=n.x-t.x,l=n.y-t.y,d=Math.sqrt(a*a+l*l),c=o*d,h=2*Math.PI;e.fillStyle=r,e.beginPath(),e.arc(t.x+a*.3,t.y+l*.3,c*.3,0,h),e.fill(),e.beginPath(),e.arc(t.x+a*.6,t.y+l*.6,c*.15,0,h),e.fill()}),i(O,"drawCurve",(e,t,n,s,r)=>{const o=1.5*(s||1),a=n.x-t.x,l=n.y-t.y,d=Math.sqrt(a*a+l*l),c=a/d,h=l/d,m=t.x+(n.x-t.x)/2,R=t.y+(n.y-t.y)/2,g=h*o,w=c*o;e.fillStyle=r,e.beginPath(),e.moveTo(t.x,t.y),e.bezierCurveTo(m+1.5*g,R-1.5*w,m+1.5*g,R-1.5*w,n.x,n.y),e.bezierCurveTo(m+2*g,R-2*w,m+2*g,R-2*w,t.x,t.y),e.closePath(),e.fill()}),i(O,"shouldDrawChart",e=>{const t=e.points.map(r=>r.y).sort(),n=Math.floor(t.length*2/10),s=Math.floor(t.length*8/10);return t[n]>-1&&t[s]<2}),i(O,"drawChart",(e,t,n,s)=>{const r=t.points.map(l=>({x:l.x*n,y:l.y*s})),{style:o}=t,a=(()=>{switch(o.type){case k.LINE:return I.drawLine;case k.TRIANGLE:return I.drawTriangle;case k.CIRCLES:return I.drawCircles;case k.CURVE:return I.drawCurve;default:throw new Error("Invalid style type!")}})();for(let l=0;l<t.orders.length;l+=1){const d=t.orders[l],{link:c}=d,h=t.colors[l],m=r[c[0]],R=r[c[1]];a(e,m,R,o.thickness,h)}});const K=class{constructor(e){const t=document.getElementById("canvas");if(t instanceof HTMLCanvasElement){if("ontouchstart"in window){const s=o=>{o.preventDefault()},r=o=>{o.preventDefault(),e.onTouchScroll(o.touches[0].pageY)};t.addEventListener("touchstart",s,{passive:!1}),t.addEventListener("touchend",s,{passive:!1}),t.addEventListener("touchcancel",s,{passive:!1}),t.addEventListener("touchmove",r,{passive:!1})}else t.onwheel=s=>{e.onScroll(s.deltaY)};window.onresize=()=>{K.adjustCanvas(t)};const n=t.getContext("2d");n instanceof CanvasRenderingContext2D&&(K.adjustCanvas(t),e.onCanvasReady(n))}}};let D=K;i(D,"adjustCanvas",e=>{const t=window.devicePixelRatio;e.width=window.innerWidth*t*2,e.height=window.innerHeight*t*2});class me{constructor(e,t){i(this,"visualizer");i(this,"simulator");i(this,"onCanvasReady",e=>{this.visualizer.setContext(e),this.simulator.start(50)});i(this,"onScroll",e=>{this.simulator.handleScroll(e)});i(this,"onTouchScroll",e=>{this.simulator.handleTouchScroll(e)});this.visualizer=e,this.simulator=t}}class fe{constructor(){const e=new O,t=new ye(e),n=new me(e,t);new D(n)}}new fe;
