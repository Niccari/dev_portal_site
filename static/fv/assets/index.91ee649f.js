var ye=Object.defineProperty,me=Object.defineProperties;var fe=Object.getOwnPropertyDescriptors;var he=Object.getOwnPropertySymbols;var Ce=Object.prototype.hasOwnProperty,we=Object.prototype.propertyIsEnumerable;var ue=(r,e,t)=>e in r?ye(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t,E=(r,e)=>{for(var t in e||(e={}))Ce.call(e,t)&&ue(r,t,e[t]);if(he)for(var t of he(e))we.call(e,t)&&ue(r,t,e[t]);return r},I=(r,e)=>me(r,fe(e));const Re=function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))n(s);new MutationObserver(s=>{for(const o of s)if(o.type==="childList")for(const i of o.addedNodes)i.tagName==="LINK"&&i.rel==="modulepreload"&&n(i)}).observe(document,{childList:!0,subtree:!0});function t(s){const o={};return s.integrity&&(o.integrity=s.integrity),s.referrerpolicy&&(o.referrerPolicy=s.referrerpolicy),s.crossorigin==="use-credentials"?o.credentials="include":s.crossorigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function n(s){if(s.ep)return;s.ep=!0;const o=t(s);fetch(s.href,o)}};Re();const xe=[{kind:"koch_triangle_outer",complexity:4,center:{x:.2,y:.3},scale:{w:1,h:1},rotation:{angle:30,speed:1},mutation:{size:1,angle:1},randomizer:{size:{amplify:10,seed:-90129041},angle:{amplify:-2.4,seed:1124901342}},style:{type:"line",thickness:3},color:{type:"cool",alpha:.9,speed:1}},{kind:"koch_triangle_inner",complexity:5,center:{x:.5,y:1.2},scale:{w:.4,h:.4},rotation:{angle:30,speed:-.9},mutation:{size:-1,angle:1},randomizer:{size:{amplify:0,seed:90129041},angle:{amplify:0,seed:124818419}},style:{type:"line",thickness:10},color:{type:"warm",alpha:.9,speed:.5}},{kind:"binary_tree",complexity:8,center:{x:.5,y:1.9},scale:{w:.2,h:.2},rotation:{angle:10,speed:-.2},mutation:{size:1.1,angle:.88},randomizer:{size:{amplify:.5,seed:90129041},angle:{amplify:-.1,seed:124818419}},style:{type:"triangle",thickness:10},color:{type:"rainbow",alpha:.9,speed:.5}},{kind:"tri_cis",complexity:6,center:{x:.8,y:3.3},scale:{w:1,h:1},rotation:{angle:80,speed:0},mutation:{size:1.2,angle:1.7},randomizer:{size:{amplify:0,seed:90129041},angle:{amplify:0,seed:124818419}},style:{type:"line",thickness:3},color:{type:"heat",alpha:.9,speed:.5}},{kind:"starmine",complexity:10,center:{x:.2,y:4.2},scale:{w:3,h:3},rotation:{angle:20,speed:.5},style:{type:"triangle",thickness:3},color:{type:"warm",alpha:.9,speed:.5}},{kind:"starmine",complexity:8,center:{x:.4,y:4.3},scale:{w:2.5,h:2.5},rotation:{angle:20,speed:.5},style:{type:"triangle",thickness:3},color:{type:"forest",alpha:.9,speed:.5}},{kind:"starmine",complexity:8,center:{x:.6,y:4.4},scale:{w:2,h:2},rotation:{angle:20,speed:.5},style:{type:"triangle",thickness:3},color:{type:"cool",alpha:.9,speed:.5}},{kind:"starmine",complexity:6,center:{x:.8,y:4.5},scale:{w:1.5,h:1.5},rotation:{angle:20,speed:.5},style:{type:"triangle",thickness:3},color:{type:"monochrome",alpha:.9,speed:.5}},{kind:"sunrise",complexity:100,center:{x:.4,y:5.1},scale:{w:3,h:3},rotation:{angle:-20,speed:0},style:{type:"curve",thickness:4},color:{type:"heat",alpha:.9,speed:.5}},{kind:"fold_ccurve",complexity:9,center:{x:.4,y:6},scale:{w:.4,h:.4},rotation:{angle:30,speed:0},mutation:{size:1,angle:1.5},randomizer:{size:{amplify:3,seed:90129041},angle:{amplify:-.6,seed:124818419}},style:{type:"line",thickness:5},color:{type:"pastel",alpha:.6,speed:.5}},{kind:"random",complexity:100,center:{x:.7,y:8},scale:{w:30,h:30},rotation:{angle:30,speed:0},mutation:{size:1,angle:1.5},randomizer:{size:{amplify:.1,seed:90129041},angle:{amplify:.1,seed:124818419}},style:{type:"circles",thickness:1.2},color:{type:"cool",alpha:.1,speed:10}},{kind:"random",complexity:100,center:{x:.7,y:9.5},scale:{w:30,h:30},rotation:{angle:30,speed:0},mutation:{size:1,angle:1.5},randomizer:{size:{amplify:.1,seed:90129041},angle:{amplify:.1,seed:124818419}},style:{type:"circles",thickness:1.2},color:{type:"warm",alpha:.1,speed:10}},{kind:"fold_dragon",complexity:10,center:{x:.5,y:11.2},scale:{w:.7,h:1.2},rotation:{angle:90,speed:.02},mutation:{size:.6,angle:-3.4},randomizer:{size:{amplify:.5,seed:-90129041},angle:{amplify:.1,seed:124818419}},style:{type:"curve",thickness:5},color:{type:"rainbow",alpha:.4,speed:2}}];var Ee={charts:xe};const k=r=>r*Math.PI/180,B={LINE:"line",TRIANGLE:"triangle",CIRCLES:"circles",CURVE:"curve"},d={CIRCLE:"start",STAR:"star",CLOVER:"clover",SUNRISE:"sunrise",RANDOM:"random",STARMINE:"starmine",KOCH_CURVE:"koch_curve",KOCH_TRIANGLE_INNER:"koch_triangle_inner",KOCH_TRIANGLE_OUTER:"koch_triangle_outer",FOLD_DRAGON:"fold_dragon",FOLD_CCURVE:"fold_ccurve",TRI_CIS:"tri_cis",TRI_TRANS:"tri_trans",BINARY_TREE:"binary_tree"},P={RAINBOW:"rainbow",WARM:"warm",FOREST:"forest",COOL:"cool",HEAT:"heat",MONOCHROME:"monochrome",PASTEL:"pastel"},N=class{constructor(r){this.colorTable=[],this.gradientRainbows=[{position:0,red:255,green:0,blue:0},{position:43,red:255,green:255,blue:0},{position:85,red:0,green:255,blue:0},{position:128,red:0,green:255,blue:255},{position:171,red:0,green:0,blue:255},{position:223,red:255,green:0,blue:255},{position:255,red:255,green:0,blue:0}],this.gradientWarm=[{position:0,red:255,green:0,blue:0},{position:128,red:255,green:255,blue:0},{position:255,red:255,green:0,blue:0}],this.gradientForest=[{position:0,red:255,green:255,blue:0},{position:128,red:0,green:255,blue:0},{position:255,red:255,green:255,blue:0}],this.gradientCool=[{position:0,red:0,green:0,blue:255},{position:128,red:0,green:255,blue:255},{position:255,red:0,green:0,blue:255}],this.gradientHeat=[{position:0,red:255,green:255,blue:0},{position:43,red:255,green:0,blue:0},{position:85,red:0,green:0,blue:255},{position:128,red:0,green:0,blue:0},{position:171,red:0,green:0,blue:255},{position:223,red:255,green:0,blue:0},{position:255,red:255,green:255,blue:0}],this.gradientMonochrome=[{position:0,red:0,green:0,blue:0},{position:128,red:255,green:255,blue:255},{position:255,red:0,green:0,blue:0}],this.gradientPastel=[{position:0,red:255,green:154,blue:154},{position:85,red:255,green:255,blue:154},{position:170,red:154,green:255,blue:255},{position:255,red:255,green:154,blue:154}],this.config=r,this.colorStartIndex=0,this.colorIterateIndex=0,this.alphaHex=N.colorToHex(Math.floor(255*this.config.alpha));const e=(()=>{switch(r.type.toString()){case P.RAINBOW:return this.gradientRainbows;case P.WARM:return this.gradientWarm;case P.FOREST:return this.gradientForest;case P.COOL:return this.gradientCool;case P.HEAT:return this.gradientHeat;case P.MONOCHROME:return this.gradientMonochrome;case P.PASTEL:return this.gradientPastel;default:throw Error("Not Implemented")}})();let t=1,n=e[0],s=e[1];for(let o=0;o<256;o+=1){const i=(o-n.position)/(s.position-n.position),l=n.red+i*(s.red-n.red),a=n.green+i*(s.green-n.green),c=n.blue+i*(s.blue-n.blue);this.colorTable.push(`#${N.colorToHex(l)}${N.colorToHex(a)}${N.colorToHex(c)}${this.alphaHex}`),s.position===o&&(n=s,t+=1,s=e[t])}}next(){const r=this.colorTable[this.colorIterateIndex];return this.colorIterateIndex=(this.colorIterateIndex+this.config.speed)%256,r}endIteration(){this.colorStartIndex=(this.colorStartIndex+this.config.speed)%256,this.colorIterateIndex=this.colorStartIndex}};let de=N;de.colorToHex=r=>{const e=Math.round(r).toString(16);return e.length===1?`0${e}`:e};class Ie{constructor(e,t){this.shaper=e,this.config=t}reset(){const{shaper:e,config:t}=this;this.identity={basePoints:e.configureBasePoints(t),orders:e.configureOrders(t.complexity),config:t,colorGenerator:new de(t.color),timestamp:0}}simulate(){const{identity:e}=this;if(!e)throw new Error("shape not reset");const{config:t,orders:n,timestamp:s}=e,{rotation:o,scale:i,center:l}=t;e.config.kind===d.RANDOM&&this.reset();const a=o.angle+o.speed*s,c=Math.sin(a),h=Math.cos(a),u=e.basePoints.map(C=>{const g=C.x*i.w,m=C.y*i.h;return{x:l.x+g*h-m*c,y:l.y+g*c+m*h}}),y=u.map(()=>e.colorGenerator.next());return e.colorGenerator.endIteration(),e.timestamp+=1,{points:u,style:t.style,colors:y,orders:n}}}class G{constructor(e){this.x=123456789,this.y=362436069,this.z=521288629,this.generate=()=>{const t=this.x^this.x<<11;return this.x=this.y,this.y=this.z,this.z=this.seed,this.seed=this.seed^this.seed>>>19^(t^t>>>8),this.seed/2**32},this.seed=e}}const j={baseAmplitude:.1};class X{static pointCounts(e){const t=Math.max(Math.min(e,10),2);return 2**(t+1)}configureBasePoints(e){var l,a,c,h;const t=new G(((a=(l=e.randomizer)==null?void 0:l.size)==null?void 0:a.seed)||-1),n=new G(((h=(c=e.randomizer)==null?void 0:c.angle)==null?void 0:h.seed)||-1),{baseAmplitude:s}=j,o=[{x:0,y:-s,index:0},{x:0,y:0,index:1}],i=this.divideBasePoints(e,o[0],o[1],1,.85,k(45),t,n);return[o[0],o[1],...i]}divideBasePoints(e,t,n,s,o,i,l,a){var D,F;const{complexity:c,randomizer:h,mutation:u}=e,y=(((D=h==null?void 0:h.size)==null?void 0:D.amplify)||0)*l.generate(),C=(((F=h==null?void 0:h.angle)==null?void 0:F.amplify)||0)*a.generate(),g=o*(y+((u==null?void 0:u.size)||1)),m=i*(C+((u==null?void 0:u.angle)||1));if(s>=Math.floor(X.pointCounts(c)/2))return[];const x=n.x-t.x,S=n.y-t.y,L=Math.sin(m),p=Math.cos(m),w=2*s,O=2*s+1,A={x:n.x+g*(p*x-L*S),y:n.y+g*(L*x+p*S),index:w},z={x:n.x+g*(p*x+L*S),y:n.y+g*(-L*x+p*S),index:O},_=[];return _.push(...this.divideBasePoints(e,n,A,w,g,m,l,a)),_.push(...this.divideBasePoints(e,n,z,O,g,m,l,a)),[A,z,..._.sort((Y,H)=>Y.index-H.index)]}configureOrders(e){const t=X.pointCounts(e)/2;return[{link:[0,1]},...this.setOrdersRecursive(t,1).sort((n,s)=>n.link[1]-s.link[1])]}setOrdersRecursive(e,t){if(t>=e)return[];const n=2*t,s=2*t+1,o={link:[t,n]},i={link:[t,s]},l=this.setOrdersRecursive(e,n),a=this.setOrdersRecursive(e,s);return[o,i,...l,...a]}}const f={LOOP:"loop",START_END_2X_FASTER:"start_end_2x_faster",END_2X_FASTER:"end_2x_faster",LINEAR:"linear"},v=r=>Array.from({length:r},(e,t)=>t);class R{generate(e){const{type:t,pointCount:n}=e;switch(t){case f.LINEAR:return v(n-1).map(s=>({link:[s,(s+1)%n]}));case f.LOOP:return v(n).map(s=>({link:[s,(s+1)%n]}));case f.START_END_2X_FASTER:return v(n).map(s=>({link:[2*s%n,2*(s+1)%n]}));case f.END_2X_FASTER:return v(n).map(s=>({link:[s,2*(s+1)%n]}));default:return[]}}}const b={CIRCLE:"circle",RANDOM:"random"};class Q{generate(e){const{type:t,length:n}=e,{baseAmplitude:s}=j;switch(t){case b.CIRCLE:return v(n).map(i=>2*Math.PI*i/n).map(i=>({x:s*Math.sin(i),y:s*Math.cos(i)}));case b.RANDOM:return v(n).map(()=>({x:s*(Math.random()-.5),y:s*(Math.random()-.5)}));default:return[]}}}class U{static pointCounts(e){return e}configureBasePoints(e){const t=U.pointCounts(e.complexity);return new Q().generate({type:b.CIRCLE,length:t})}configureOrders(e){const t=U.pointCounts(e);return new R().generate({type:f.LOOP,pointCount:t})}}class V{static pointCounts(e){return e*40}configureBasePoints(e){const t=V.pointCounts(e.complexity),{baseAmplitude:n}=j;return v(t).map(s=>{const o=2*Math.PI*s/t,i=n*Math.sin(e.complexity*o);return{x:i*Math.cos(o-Math.PI),y:i*Math.sin(o-Math.PI)}})}configureOrders(e){const t=V.pointCounts(e);return new R().generate({type:f.LOOP,pointCount:t})}}class Z{recursive(e,t,n,s,o,i,l,a){const{randomizer:c,mutation:h,complexity:u}=e,y=i[t%i.length],C=o.x-s.x,g=o.y-s.y,m=[];if(y.folds.forEach((p,w)=>{var re,oe,ie,ae,le,ce;const O=(()=>w===0||p.fromStart?s:p.fromEnd?o:m[w-1])(),A=p.fromEnd?-1:1,{length:z,radian:_}=p,D=((oe=(re=c==null?void 0:c.size)==null?void 0:re.amplify)!=null?oe:0)*l.generate(),F=((ae=(ie=c==null?void 0:c.angle)==null?void 0:ie.amplify)!=null?ae:0)*a.generate(),Y=A*z*(D+((le=h==null?void 0:h.size)!=null?le:1)),H=_*(F+((ce=h==null?void 0:h.angle)!=null?ce:1)),ne=Math.sin(H),se=Math.cos(H);m.push({x:O.x+Y*(se*C-ne*g),y:O.y+Y*(ne*C+se*g)})}),n===u)return t===0?[s,...m,o]:t<y.folds.length-1?[...m,o]:[...m,o];const x=[s,...m,o];return[...Array.from({length:x.length-1},(p,w)=>w).map(p=>[x[p],x[p+1]]).map((p,w)=>{const O=(y.folds.length+1)*t+w;return[...this.recursive(e,O,n+1,p[0],p[1],i,l,a)]}).reduce((p,w)=>p.concat(w))]}createPoints(e,t){var a,c,h,u;const n=new G(((c=(a=e.randomizer)==null?void 0:a.size)==null?void 0:c.seed)||-1),s=new G(((u=(h=e.randomizer)==null?void 0:h.angle)==null?void 0:u.seed)||-1),o={x:-.1,y:0},i={x:.1,y:0};return this.recursive(e,0,2,o,i,t,n,s)}}class ee{constructor(){this.engine=new Z}static selectFoldRules(e){const t={length:Math.SQRT1_2,radian:45*Math.PI/180},n={length:Math.SQRT1_2,radian:-45*Math.PI/180};switch(e){case d.FOLD_CCURVE:return[{folds:[n]}];case d.FOLD_DRAGON:return[{folds:[t]},{folds:[n]}];default:throw new Error("Unsupported curve type!")}}configureBasePoints(e){const t=ee.selectFoldRules(e.kind);return this.engine.createPoints(e,t)}configureOrders(e){const t=2**(e-1)+1;return new R().generate({type:f.LINEAR,pointCount:t})}}class W{static pointCounts(e){return e}configureBasePoints(e){const t=W.pointCounts(e.complexity);return new Q().generate({type:b.RANDOM,length:t})}configureOrders(e){const t=W.pointCounts(e);return new R().generate({type:f.LOOP,pointCount:t})}}class K{static pointCounts(e){return e}configureBasePoints(e){const t=K.pointCounts(e.complexity);return new Q().generate({type:b.CIRCLE,length:t})}configureOrders(e){const t=K.pointCounts(e);return new R().generate({type:f.START_END_2X_FASTER,pointCount:t})}}class ${static pointCounts(e){return e*2}configureBasePoints(e){const t=$.pointCounts(e.complexity),{baseAmplitude:n}=j;return v(t).map(s=>{const o=2*Math.PI*s/t-Math.PI,i=s%2===0?n:n/4;return{x:i*Math.cos(o),y:i*Math.sin(o)}})}configureOrders(e){return new R().generate({type:f.LOOP,pointCount:$.pointCounts(e)})}}class q{static pointCounts(e){return e}configureBasePoints(e){return new Q().generate({type:b.CIRCLE,length:q.pointCounts(e.complexity)})}configureOrders(e){return new R().generate({type:f.END_2X_FASTER,pointCount:q.pointCounts(e)})}}class J{constructor(){this.engine=new Z}static getFoldRule(){return[{folds:[{length:1/3,radian:0},{length:1/3,radian:60*Math.PI/180},{length:1/3,radian:-60*Math.PI/180}]}]}configureBasePoints(e){const t=J.getFoldRule();return this.engine.createPoints(e,t)}configureOrders(e){const t=2**(2*(e-1))+1;return new R().generate({type:f.LINEAR,pointCount:t})}}class te{constructor(){this.engine=new Z}static selectFoldRules(e){const t=[{folds:[{length:.5,radian:90*Math.PI/180},{length:.5,radian:0,fromStart:!0},{length:.5,radian:90*Math.PI/180,fromEnd:!0}]}],n=[{folds:[{length:1/2,radian:90*Math.PI/180},{length:1/2,radian:0,fromStart:!0},{length:1/2,radian:-90*Math.PI/180,fromEnd:!0}]}];return e===d.TRI_CIS?n:t}configureBasePoints(e){const t=te.selectFoldRules(e.kind);return this.engine.createPoints(e,t)}configureOrders(e){const t=2**(2*(e-1))+1;return new R().generate({type:f.LINEAR,pointCount:t})}}class ve{constructor(){this.kochCurve=new J}configureBasePoints(e){const t=e.kind===d.KOCH_TRIANGLE_INNER;let n=this.kochCurve.configureBasePoints(e);const s=Math.sin(k(120)),o=Math.cos(k(120));t&&(n=n.map(a=>I(E({},a),{y:-a.y}))),n=n.map(a=>I(E({},a),{y:a.y+.1/Math.sqrt(3)}));const i=n.map(a=>({x:a.x*o-a.y*s,y:a.x*s+a.y*o})),l=i.map(a=>({x:a.x*o-a.y*s,y:a.x*s+a.y*o}));return[...n,...l,...i]}configureOrders(e){const t=3*(2**(2*(e-1))+1);return new R().generate({type:f.LINEAR,pointCount:t})}}const pe=class{constructor(){this.load=()=>{const e=Ee.charts.map(t=>{const n=I(E({},t),{kind:t.kind,style:I(E({},t.style),{type:t.style.type}),color:I(E({},t.color),{type:t.color.type}),rotation:{angle:k(t.rotation.angle),speed:k(t.rotation.speed)},complexity:t.complexity});return{chart:pe.instantiateChart(n.kind),config:n}}).map(t=>new Ie(t.chart,t.config));return e.map(t=>t.reset()),e}}};let ge=pe;ge.instantiateChart=r=>{switch(r){case d.STAR:return new K;case d.STARMINE:return new $;case d.SUNRISE:return new q;case d.CIRCLE:return new U;case d.CLOVER:return new V;case d.RANDOM:return new W;case d.FOLD_CCURVE:case d.FOLD_DRAGON:return new ee;case d.KOCH_CURVE:return new J;case d.KOCH_TRIANGLE_INNER:case d.KOCH_TRIANGLE_OUTER:return new ve;case d.TRI_CIS:case d.TRI_TRANS:return new te;case d.BINARY_TREE:return new X;default:throw new Error("Unsupported chart type!")}};class Oe{constructor(e){this.start=t=>{const n=1e3/t;setInterval(()=>{const s=this.simulate();this.visualizer.draw(s)},n)},this.handleScroll=t=>{this.scrollY+=t,this.scrollY<0&&(this.scrollY=0),this.scrollEndCount=6},this.handleTouchScroll=t=>{this.touchScrollPrevY&&(this.scrollY-=2*(t-this.touchScrollPrevY)),this.touchScrollPrevY=t,this.scrollY<0&&(this.scrollY=0),this.scrollEndCount=6},this.simulate=()=>{if(this.scrollEndCount-=1,this.scrollEndCount===0){this.touchScrollPrevY=void 0;const n=`${window.location.pathname}?depth=${this.scrollY}`;window.history.replaceState(null,"Fractal-Visualizer depth: + scrollY",n)}return this.simulators.map(n=>n.simulate()).map(n=>I(E({},n),{points:n.points.map(s=>I(E({},s),{y:s.y-this.scrollY/300}))}))},this.visualizer=e,this.simulators=new ge().load(),this.scrollEndCount=0,this.scrollY=(()=>{const t=new URL(document.location.href).searchParams;return parseInt(t.get("depth")||"0",10)})()}}const T=class{constructor(){this.nullableContext=null,this.setContext=r=>{this.nullableContext=r;const e=r.canvas.width,t=r.canvas.height;r.fillStyle="rgb(0, 0, 0)",r.fillRect(0,0,e,t)},this.draw=r=>{const e=this.nullableContext;if(e!==null){const t=e.canvas.width,n=e.canvas.height;e.fillStyle="rgba(0, 0, 0, 0.05)",e.fillRect(0,0,t,n),r.forEach(s=>{T.shouldDrawChart(s)&&T.drawChart(e,s,t,n)})}}}};let M=T;M.drawLine=(r,e,t,n,s)=>{r.lineWidth=n,r.strokeStyle=s,r.beginPath(),r.moveTo(e.x,e.y),r.lineTo(t.x,t.y),r.closePath(),r.stroke()};M.drawTriangle=(r,e,t,n,s)=>{const o=t.x-e.x,i=t.y-e.y,l=Math.sqrt(o*o+i*i),a=o/l,c=i/l;r.fillStyle=s,r.beginPath(),r.moveTo(t.x,t.y),r.lineTo(e.x+c*n,e.y-a*n),r.lineTo(e.x-c*n,e.y+a*n),r.lineTo(t.x,t.y),r.closePath(),r.fill()};M.drawCircles=(r,e,t,n,s)=>{const o=Math.log(n||11),i=t.x-e.x,l=t.y-e.y,a=Math.sqrt(i*i+l*l),c=o*a,h=2*Math.PI;r.fillStyle=s,r.beginPath(),r.arc(e.x+i*.3,e.y+l*.3,c*.3,0,h),r.fill(),r.beginPath(),r.arc(e.x+i*.6,e.y+l*.6,c*.15,0,h),r.fill()};M.drawCurve=(r,e,t,n,s)=>{const o=1.5*(n||1),i=t.x-e.x,l=t.y-e.y,a=Math.sqrt(i*i+l*l),c=i/a,h=l/a,u=e.x+(t.x-e.x)/2,y=e.y+(t.y-e.y)/2,C=h*o,g=c*o;r.fillStyle=s,r.beginPath(),r.moveTo(e.x,e.y),r.bezierCurveTo(u+1.5*C,y-1.5*g,u+1.5*C,y-1.5*g,t.x,t.y),r.bezierCurveTo(u+2*C,y-2*g,u+2*C,y-2*g,e.x,e.y),r.closePath(),r.fill()};M.shouldDrawChart=r=>{const e=r.points.map(s=>s.y).sort(),t=Math.floor(e.length*2/10),n=Math.floor(e.length*8/10);return e[t]>-1&&e[n]<2};M.drawChart=(r,e,t,n)=>{const s=e.points.map(l=>({x:l.x*t,y:l.y*n})),{style:o}=e,i=(()=>{switch(o.type){case B.LINE:return T.drawLine;case B.TRIANGLE:return T.drawTriangle;case B.CIRCLES:return T.drawCircles;case B.CURVE:return T.drawCurve;default:throw new Error("Invalid style type!")}})();for(let l=0;l<e.orders.length;l+=1){const a=e.orders[l],{link:c}=a,h=e.colors[l],u=s[c[0]],y=s[c[1]];i(r,u,y,o.thickness,h)}};class Pe{constructor(e){this.adjustCanvas=n=>{const s=window.devicePixelRatio;n.width=window.innerWidth*s*2,n.height=window.innerHeight*s*2};const t=document.getElementById("canvas");if(t instanceof HTMLCanvasElement){if("ontouchstart"in window){const s=i=>{i.preventDefault()},o=i=>{i.preventDefault(),e.onTouchScroll(i.touches[0].pageY)};t.addEventListener("touchstart",s,{passive:!1}),t.addEventListener("touchend",s,{passive:!1}),t.addEventListener("touchcancel",s,{passive:!1}),t.addEventListener("touchmove",o,{passive:!1})}else t.onwheel=s=>{e.onScroll(s.deltaY)};window.onresize=()=>{this.adjustCanvas(t)};const n=t.getContext("2d");n instanceof CanvasRenderingContext2D&&(this.adjustCanvas(t),e.onCanvasReady(n))}}}class Te{constructor(e,t){this.onCanvasReady=n=>{this.visualizer.setContext(n),this.simulator.start(50)},this.onScroll=n=>{this.simulator.handleScroll(n)},this.onTouchScroll=n=>{this.simulator.handleTouchScroll(n)},this.visualizer=e,this.simulator=t}}class Me{constructor(){const e=new M,t=new Oe(e),n=new Te(e,t);new Pe(n)}}new Me;
